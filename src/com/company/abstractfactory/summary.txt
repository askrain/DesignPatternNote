抽象工厂模式：

也是创建型的设计模式之一，对应于工厂模式，由于这个设计模式的一些性质，会相对来说较为少用。
抽象工厂模式起源于以前对不同操作系统的图形化解决方案

定义：
为创建一组相关或者相互依赖的对象提供接口，而不需要指定他们的具体类

场景：
一个对象族有相同的约束时都可以使用抽象工厂模式。比较形象的例子是：短信和电话功能在不同手机操作系统
上的实现

模型构成：
1.抽象工厂角色
2.具体工厂角色
3.抽象产品角色
4.具体产品角色

由汽车的例子可以看出：抽象工厂有很多弊端，类的徒增。如果工厂类增多的话，类的文件将更加多

抽象工厂方法模式在安卓中的应用对应的也很少：MediaPlayerFactory中有四种不同的MediaPlayer.每一种具体的MediaPlayer
都有一种具体的工厂类来创建

优点：
运用接口，分离接口与实现。客户端使用抽象工厂来创建需要的对象，隐藏具体实现。客户端面向产品接口编程。实现了解耦，便于扩展与维护

缺点：
1.类文件的爆炸性增长
2.不太容易扩展新的产品类。每当增加一个产品类，有可能修改抽象工厂，对应的所有具体的工厂均会被
修改。
