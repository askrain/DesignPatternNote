模版方法：
在面向对象的开发过程中，通常会遇到这样的问题，知道一个算法所需的关键步骤，并确定了这些步骤的执行顺序
但是，某些步骤的具体实现是未知的，或者说某些步骤的实现是会随着环境的改变而改变的。执行程序的流程大致如下：

1. 检查代码的正确性
2. 链接相关的类库
3. 编译相关的代码
4. 执行程序

像上面这种执行流程是固定的，这类问题的解决方案就是我们说的模版方法

定义：
定义一个操作中算法的框架，而将一些步骤延迟到子类中，使得子类可以不改变一个算法的结构即可以重新定义该
算法的某些特定步骤


使用场景：
1.多个子类有公用的方法，并且逻辑基本相同时
2.重要、复杂的算法，可以把核心的算法设计为模版方法，周边的相关细节功能则由子类去实现
3.重构时，模版方法模式是经常使用的模式，把相同的带代码抽取到父类中，然后通过钩子函数函数约束其行为


模型：
AbsTemplate 抽象类
ConcreteImplA  具体实现类A
ConcreteImplB  具体实现类B