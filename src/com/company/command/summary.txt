命令模式Command Pattern
是行为型设计模式之一，最常见的例子为程序菜单命令，如关机：
点击“关机”后执行的是一系列的操作：先是暂停处理事件 保存系统的一些配置 ，然后结束程序进程。最后
调用内核命令关闭计算机。
简而言之，就是将一系列的方法调用封装，用户只需调用一个方法执行，那么所有被封装的方法就会被挨个执行调用


定义：
将一个请求封装成对象，从而让用户使用的不同的请求把客户端参数化。对请求排队或者记录请求日志，以及支持
可撤销操作


场景：
1.需要抽象出待执行的动作，然后以参数的形式提供出来，类似于过程设计的回调机制，而命令模式是回调机制的
一个面向对象的替代品
2.在不同的时刻指定、排列和执行请求。一个命令对象可以有与初始请求无关的生存期
3.需要支持取消操作
4.支持修改日志功能，当系统崩溃的时候，这些修改可以重新执行一遍
5.需要支持事务操作

模型：
Receiver 负责具体实施或者执行一个请求，就是执行具体的代码逻辑  【任何一个类都可以成为一个接受者】
Command 定义所有命令类的抽象接口
ConcreteCommand 具体的命令角色  调用接受者的具体方法，在接受者和命令执行的具体行为之间加以弱耦合
Invoker 请求者对象 调用命令对象执行具体的操作
Client 客户端角色

一句话：命令模式就是将行为调用者与实现者解耦